.popup {
  position: fixed;
  display: none;
  box-sizing: border-box;
  z-index: 1000;
  background-color: rgb(255, 255, 255);
  border: 1px solid $border-color;
  border-left: 0px;
  border-right: 0px;
  box-shadow: 0 0 4px 0px $border-color;
  padding: 1px 0px;
  border-radius: 4px;

  &.compact {
    padding: 0px;

    .popup-title {
      padding: 10px 14px 0px 14px;
      margin-bottom: 0px;
    }
  }

  .popup-title {
    font-size: 12px;
    font-weight: bold;

    margin-bottom: 10px;
    display: flex;
    pointer-events: all;

    > * {
      flex: 1 1 auto;
    }

    .tools {
      text-align: right;

      button {
        border: 0px;
        background-color: transparent;
        cursor: pointer;
        font-size: 20px;
        line-height: 0.5;
        padding: 0px;
      }
    }

    label {
      cursor: move; 
    }
  }

  .popup-content {
    .popup-item {

      label {
        font-size: 11px;
        vertical-align: middle;
        text-align: right;
        line-height: 1.6;
        padding-right: 2px;
        
      }

      label + div {
        vertical-align: middle;
      }

    }
  }

  &.background-property-popup {
    box-sizing: border-box;
    width: 100%;

    .size-list {
      button {
        appearance: none;
        background-color: transparent;
        border: 0px;
        padding: 2px 5px;
        cursor: pointer;
        outline: none;
        box-sizing: border-box;
        width: 50px;
        background-color: rgba($border-color, 0.5);
      }

      &[data-value="contain"] button[value="contain"],
      &[data-value="cover"] button[value="cover"],
      &[data-value="auto"] button[value="auto"] {
        background-color: $border-color;
        font-weight: bold;
      }
    }

    .repeat-list {
      button {
        width: 24px;
        height: 24px;
        margin-right: 1px;
        appearance: none;
        border: 1px solid $border-color;
        background-color: white;
        outline: none;
        cursor: pointer;

        &[value="no-repeat"] {
          background-image: linear-gradient(
            to top right,
            rgba(blue, 0.5),
            black
          );
          background-position: center center;
          background-size: 8px 8px;
          background-repeat: no-repeat;
        }

        &[value="repeat"] {
          background-image: linear-gradient(
            to top right,
            rgba(blue, 0.5),
            black
          );
          background-position: 10px 10px;
          background-size: 8px 8px;
          background-repeat: repeat;
        }

        &[value="repeat-x"] {
          background-image: linear-gradient(
            to top right,
            rgba(blue, 0.5),
            black
          );
          background-position: 10px 8px;
          background-size: 8px 8px;
          background-repeat: repeat-x;
        }

        &[value="repeat-y"] {
          background-image: linear-gradient(
            to top right,
            rgba(blue, 0.5),
            black
          );
          background-position: 8px 10px;
          background-size: 8px 8px;
          background-repeat: repeat-y;
        }

        &[value="space"] {
          background-image: linear-gradient(
            to top right,
            rgba(blue, 0.5),
            black
          );
          background-position: 10px 10px;
          background-size: 8px 8px;
          background-repeat: space;
        }

        &[value="round"] {
          background-image: linear-gradient(
            to top right,
            rgba(blue, 0.5),
            black
          );
          background-position: 0px 0px;
          background-size: 8px 8px;
          background-repeat: round;
        }
      }

      &[data-value="repeat"] button[value="repeat"],
      &[data-value="no-repeat"] button[value="no-repeat"],
      &[data-value="repeat-x"] button[value="repeat-x"],
      &[data-value="repeat-y"] button[value="repeat-y"],
      &[data-value="space"] button[value="space"],
      &[data-value="round"] button[value="round"] {
        background-color: $border-color;
        box-shadow: 0 0 1px 0px black;
      }
    }

    .blend-list {
      padding: 2px 0px;
      select.full-size {
        width: 100px;
      }
    }
  }

  &.display-property-popup {
    .popup-item {
      height: auto;
      margin-bottom: 2px;
    }
    .grid-5 {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      grid-column-gap: 2px;
    }

    button {
      appearance: none;
      background-color: transparent;
      border: 0px;
      padding: 2px 5px;
      cursor: pointer;
      outline: none;
      box-sizing: border-box;
      width: 50px;
      background-color: rgba($border-color, 0.5);
    }
    .flex-direction {
      &[data-value="row"] button[value="row"],
      &[data-value="row-reverse"] button[value="row-reverse"],
      &[data-value="column"] button[value="column"],
      &[data-value="column-reverse"] button[value="column-reverse"] {
        background-color: $border-color;
        font-weight: bold;
      }
    }

    .flex-wrap {
      &[data-value="nowrap"] button[value="nowrap"],
      &[data-value="wrap"] button[value="wrap"],
      &[data-value="wrap-reverse"] button[value="wrap-reverse"] {
        background-color: $border-color;
        font-weight: bold;
      }
    }

    .justify-content {
      &[data-value="flex-start"] button[value="flex-start"],
      &[data-value="flex-end"] button[value="flex-end"],
      &[data-value="center"] button[value="center"],
      &[data-value="space-between"] button[value="space-between"],
      &[data-value="space-around"] button[value="space-around"] {
        background-color: $border-color;
        font-weight: bold;
      }
    }
  }

  &.box-shadow-property-popup {
    padding: 10px;
    width: 300px;
    height: 200px;
    .box {
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      grid-template-rows: repeat(6, 1fr);
      grid-row-gap: 10px;
      grid-column-gap: 2px;

      > * {
        height: 20px;
      }

      input,
      select {
        width: 100%;
        vertical-align: middle;
      }

      .input {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
      }

      .type {
        grid-column: 1/6;
        grid-row: 1/2;
        display: grid;
        grid-template-columns: 50px 1fr;
        grid-column-gap: 10px;

        .select {
          display: grid;
          grid-template-columns: repeat(2, 1fr);
          height: 20px;

          @each $selectType in inset, outset {
            &[data-selected-value="#{$selectType}"]
              button[data-value="#{$selectType}"] {
              box-shadow: inset 0px 0px 3px 0px rgba(0, 0, 0, 0.5);
              background-color: $border-color;
            }
          }

          button {
            appearance: none;
            border: 0px;
            background-color: white;
            outline: none;
            cursor: pointer;
          }
        }
      }

      .offset-x {
        grid-column: 1/4;
        grid-row: 2/3;
        display: grid;
        grid-template-columns: 50px 1fr;
        grid-column-gap: 10px;
      }

      .offset-y {
        grid-column: 1/4;
        grid-row: 3/4;
        display: grid;
        grid-template-columns: 50px 1fr;
        grid-column-gap: 10px;
      }

      .blur-radius {
        grid-column: 1 / 6;
        grid-row: 5/6;
        display: grid;
        grid-template-columns: 50px 1fr;
        grid-column-gap: 10px;

        .input {
          grid-template-columns: 2fr 1fr 1fr;
          grid-column-gap: 2px;
        }
      }

      .spread-radius {
        grid-column: 1 / 6;
        grid-row: 6/7;
        display: grid;
        grid-template-columns: 50px 1fr;
        grid-column-gap: 10px;

        .input {
          grid-template-columns: 2fr 1fr 1fr;
          grid-column-gap: 2px;
        }
      }

      .drag-board {
        grid-column: 4/6;
        grid-row: 2/5;
        background-color: white;
        box-sizing: border-box;
        border: 1px solid $border-color;
        height: 84px;
        position: relative;
        // pointer-events: none;
        background-image: linear-gradient(
            to right,
            $border-color,
            $border-color
          ),
          linear-gradient(to right, $border-color, $border-color);
        background-size: 100% 1px, 1px 100%;
        background-position: 0px center, center 0px;
        background-repeat: no-repeat;

        .pointer {
          pointer-events: none;
          position: absolute;
          width: 10px;
          height: 10px;
          transform: translateX(calc(55px - 5px)) translateY(calc(42px - 5px));
          background-color: $border-color;
          border-radius: 100%;
        }
      }
    }
  }
}
